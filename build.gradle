plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id "org.jetbrains.kotlin.kapt" version "1.3.72"
    id "org.springframework.boot" version "2.3.6.RELEASE"
    id "io.spring.dependency-management" version "1.0.10.RELEASE"

    // 就是这个插件
    id "com.github.johnrengelman.shadow" version "5.2.0"
}
//在这里改成自己的com.name.project_name
//用-比下划线更规范一些
def groupId = 'com.lc.spring_mirai'
def mainClass = '${groupId}.SpringApplicationKt'

group '${groupId}'
version '1.0'

sourceCompatibility = 1.8

repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
    jcenter()
}


application {
    mainClassName = '${mainClass}'
}
//禁掉jar task
//jar.enabled = false
shadowJar {
    baseName = "${groupId}"
    //classifier是生成jar包的后缀
    classifier = null
    version = ''
    manifest {
        // 它指定的mainClass就找得到
        //attributes 'Main-Class': '${mainClass}'
    }
}

assemble.dependsOn(shadowJar)

jar {

}

/**
 * 删除旧版本的 jar 包
 */
task clearJar() {
    delete 'build/_exports/hpauth-exports-1.0.0.jar'
}


/**
 * 创建 jar 包
 */
task makeJar(type: Jar) {
    baseName = "${groupId}"
//    appendix = "v"
    version = "1.0.0"
//    classifier = "release"
    // 后缀名
    extension = "jar"
//      最终的 jar 包名，如果没设置，默认为 [baseName]-[appendix]-[version]-[classifier].[extension]
//    archiveName = "hpauth-exports.jar"

//      java 编译后的 class 文件
    from('build/classes/kotlin/main/')
//    指定需要被打包成 jar 的文件夹
//    include('com/homeprint/module/auth/_exports/**')
//    jar 的输出路径，默认输出在 build/libs 目录下
    destinationDir = file('build/_exports')
}

/**
 * 设置 task 依赖
 * 执行 makeJar 时，会先执行 clearJar，再执行build，最后执行 makeJar，保证获取最新的编译文件
 */
makeJar.dependsOn(clearJar)


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.0"
    implementation("net.mamoe:mirai-core-qqandroid:1.3.3")
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.4.10")
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.22'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.5'
//    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlin
}


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}